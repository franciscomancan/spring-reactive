plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.donjuan'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springAiVersion', "1.0.0-M1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    /*implementation 'org.springframework.boot:spring-boot-starter-graphql'*/
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    /*implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'*/
    /*implementation 'org.springframework.ai:spring-ai-vertex-ai-gemini-spring-boot-starter'*/
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    /*testImplementation 'org.springframework.graphql:spring-graphql-test'*/
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'
}

/*dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}*/

tasks.named('test') {
    useJUnitPlatform()
}
